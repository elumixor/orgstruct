@mixin background {
    background: repeating-linear-gradient( -45deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.01) 30px);
    background-size: 40px 40px;
    backdrop-filter: blur(2px);
    box-shadow: 0 0 20px -5px rgba(0, 0, 0, 0.3);

    animation: contentGradientAnimation 10s ease-in-out infinite;

    @keyframes contentGradientAnimation {
        0% {
            background-position: 0px 0px;
        }
        50% {
            background-position: 0px 60px;
        }
        100% {
            background-position: 0px 0px;
        }
    }
}

@mixin darkening($opacity: 0.2, $hoverOpacity: 0.2) {
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
        background-color: black;
        opacity: $opacity;

        transition: opacity 0.1s;
    }

    &:hover {
        &::before {
            opacity: if($opacity == 0, 0, $opacity + $hoverOpacity);
        }
    }
}

@mixin riseOnHover {
    box-shadow: inset 0 0 50px 14px rgba(0, 0, 0, 0.2), 0px 0px 2px 0px rgb(0 0 0 / 80%);

    &:hover {
        box-shadow: inset 0 0 50px 14px rgba(0, 0, 0, 0.2), 10px 10px 2px 0px rgb(0 0 0 / 60%);
        left: -5px;
        top: -5px;
        backdrop-filter: blur(2px);
    }
}

:host {
    position: relative;
    display: block;
}

.content {
    position: absolute;
    display: block;

    width: 100%;
    max-width: 600px;
    left: 0px;
    top: 0px;

    margin: 35px auto;
    padding: 35px 35px;

    border: 1px solid rgba(0, 0, 0, 0.2);

    @include background;
    @include darkening(0, 0);
    // @include riseOnHover;

    transition: box-shadow 0.3s, left 0.3s, top 0.3s, backdrop-filter 0.3s;

    color: white;
}

.offsetter {
    width: 100%;
    transition: left 0.5s, top 0.5s;
}

.close-button {
    position: absolute;
    right: -3px;
    top: 5px;
    transform: translateY(-100%);
    margin: -5px;
    padding: 5px;
    cursor: pointer;

    &>div {
        padding: 5px 10px;
    }
}