@use "@styles/colors.scss";

.grow-wrap {
    // easy way to plop the elements on top of each other and have them both sized based on the tallest one's height
    display: grid;

    margin-top: 2.5px;
    margin-bottom: 2.5px;

    &::after {
        // Note the weird space! Needed to prevent jumpy behavior
        content: attr(data-replicated-value) " ";
        white-space: pre-wrap;
        visibility: hidden;
    }
}

textarea {
    resize: none;
    overflow: hidden;
    text-align: unset;

    &::placeholder {
        color: var(--black);
        opacity: 0.5;
        font-style: italic;
    }
}

// Identical styling required!!
.grow-wrap > textarea,
.grow-wrap::after {
    font: inherit;
    color: unset;

    // Place on top of each other
    grid-area: 1 / 1 / 2 / 2;

    background-color: transparent;
    border: none;
    outline: none;
    overflow-wrap: anywhere;

    font-size: 1em;
    transition: all 0.2s ease-in-out;
}

label {
    pointer-events: all;
    display: block;
    position: relative;
    transition: all var(--duration-action);

    &::after {
        content: "";
        position:absolute;
        // bottom: 0;
        left: 5px;
        width: 15px;
        height: 2px;
        // background-color: colors.darken(var(--secondary), 10%);
        background-color: var(--secondary);
        transform: translateY(70%);
        border-radius: 100px;
        opacity: 1;

        transition: all var(--duration-action);
    }

    &.disabled {
        pointer-events: none;

        &::after {
            left: 0;
            opacity: 0;
            width: 5px;
        }
    }


    &:not(.disabled):hover, &:not(.disabled).focused {
        .grow-wrap > textarea, .grow-wrap::after {
            pointer-events: all;
            color: colors.darken(var(--secondary), 20%);
        }

    }

    &:not(.disabled):hover::after {
        width: 20%;
        left: 5px;
    }

    &:not(.disabled).focused::after {
        width: calc(95% - 4px);
        left: 2px;
    }
}